services:
  test-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      SERVER_DEBUG: 'true'
      SERVER_ENVIRONMENT: 'testing'
      SERVER_DATABASE_URL: 'mongodb://user:pass@test-mongodb:27017/medical_jobs_tests'
      SERVER_HOST: '0.0.0.0'
      SERVER_PORT: '8000'
      SERVER_LOG_LEVEL: 'INFO'
      SERVER_CORS_ALLOW_ORIGINS: '["http://localhost:5000", "http://127.0.0.1:5000", "http://localhost:5001", "http://127.0.0.1:5001", "http://localhost:5002", "http://127.0.0.1:5002"]'
      SERVER_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      SERVER_GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      SERVER_EMAIL_HOST: 'mailhog'
      SERVER_EMAIL_PORT: '1025'
      SERVER_EMAIL_USERNAME: ''
      SERVER_EMAIL_PASSWORD: ''
      SERVER_EMAIL_FROM: 'noreply@example.com'
      SERVER_APP_URL: "http://localhost:3000"
      SERVER_RECAPTCHA_SECRET_KEY: "dummy_key"
      SERVER_S3_AVATAR_BUCKET_NAME: "avatars"
      SERVER_ACCOUNTS_BASE_URL: "http://localhost:5002"
      SERVER_RP_ID: 'localhost'
      SERVER_RP_NAME: 'Starter'
      SERVER_RP_EXPECTED_ORIGIN: 'http://localhost:5002'
      SERVER_JWE_SECRET_KEY: "ca07d5f965a534ffb07d1699e30385a6"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/health/"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      test-mongodb:
        condition: service_healthy

  test-accounts-ui:
    build:
      context: .
      dockerfile: apps/accounts/Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:8000
        - NEXT_PUBLIC_URL=http://localhost:5002
        - NEXT_PUBLIC_RECAPTCHA_SITE_KEY=dummy_key
        - NEXT_PUBLIC_RECRUITER_PORTAL_BASE_URL=http://localhost:5001
        - NEXT_PUBLIC_SEEKER_PORTAL_BASE_URL=http://localhost:5000
    ports:
      - "5002:5002"
    environment:
        HOST: 0.0.0.0
        JWE_SECRET_KEY: "ca07d5f965a534ffb07d1699e30385a6"
        API_URL: http://test-server:8000
        NODE_ENV: production
        CI: ${CI}
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5002/"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      test-server:
        condition: service_healthy

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "1025:1025"
      - "8025:8025"
  test-mongodb:
    image: docker.io/bitnami/mongodb:8.0
    ports:
      - "27017:27017"
    environment:
      - MONGODB_USERNAME=user
      - MONGODB_PASSWORD=pass
      - MONGODB_DATABASE=medical_jobs_tests
      - MONGODB_ROOT_PASSWORD=rootpass
    volumes:
      - "test_mongodb_data:/bitnami/mongodb"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  test_mongodb_data:
    driver: local

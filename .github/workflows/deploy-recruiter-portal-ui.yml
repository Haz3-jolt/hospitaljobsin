name: Build and Deploy Recruiter Portal UI

on:
  push:
    branches:
      - main
    paths:
      - 'apps/recruiter-portal/**'
      - '.github/workflows/deploy-recruiter-portal-ui.yml'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEPLOYMENT_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEPLOYMENT_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - uses: actions/cache@v4
        with:
          # See here for caching with `yarn`, `bun` or other package managers https://github.com/actions/cache/blob/main/examples.md or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/apps/recruiter-portal/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('apps/recruiter-portal/pnpm-lock.yaml') }}-${{ hashFiles('apps/recruiter-portal/**/*.js', 'apps/recruiter-portal/**/*.jsx', 'apps/recruiter-portal/**/*.ts', 'apps/recruiter-portal/**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('apps/recruiter-portal/pnpm-lock.yaml') }}-

      - name: Install dependencies
        working-directory: ./apps/recruiter-portal
        run: pnpm install --frozen-lockfile --shamefully-hoist

      - name: Run Relay Compiler
        working-directory: ./apps/recruiter-portal
        run: pnpm run relay ../../relay.config.json

      - name: Check for uncommitted changes
        working-directory: ./apps/recruiter-portal
        run: ./scripts/check-git-status.sh

      - name: SST Deploy
        working-directory: ./apps/recruiter-portal
        run: npx sst deploy --stage production --print-logs
        env:
            SST_VPC_PRIVATE_SUBNETS: ${{ vars.SST_VPC_PRIVATE_SUBNETS }}
            SST_VPC_SECURITY_GROUPS: ${{ vars.SST_VPC_SECURITY_GROUPS }}
            SST_RECRUITER_PORTAL_DOMAIN: ${{vars.SST_RECRUITER_PORTAL_DOMAIN }}
            SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
            NEXT_PUBLIC_API_URL: ${{ vars.SST_API_URL }}
            NEXT_PUBLIC_URL: ${{ vars.SST_RECRUITER_PORTAL_BASE_URL }}
            NEXT_PUBLIC_ACCOUNTS_BASE_URL: ${{ vars.SST_ACCOUNTS_BASE_URL }}
            NEXT_PUBLIC_SEEKER_PORTAL_BASE_URL: ${{ vars.SST_SEEKER_PORTAL_BASE_URL}}
            NEXT_PUBLIC_SESSION_COOKIE_KEY: user_session
            NEXT_PUBLIC_ENVIRONMENT: production
            NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.RECRUITER_PORTAL_SENTRY_DSN }}
            NEXT_PUBLIC_SENTRY_ORGANIZATION: ${{ vars.SENTRY_ORGANIZATION }}
            NEXT_PUBLIC_SENTRY_PROJECT: ${{vars.RECRUITER_PORTAL_SENTRY_PROJECT}}
            API_URL: ${{ vars.SST_API_URL }}
            AWS_SECRET_ID: ${{ secrets.SST_RECRUITER_PORTAL_SECRET_ID }}
            SKIP_ENV_VALIDATION: true
            NODE_ENV: production


# TODO: wait for relevant tests to pass before building and pushing
name: Plan and Apply Recruiter Portal UI Terraform Changes

on:
  push:
    branches:
      - main
    paths:
      - "infrastructure/modules/recruiter-portal-ui/**"
      - "apps/recruiter-portal-ui/**"
      - ".github/workflows/deploy-infra-recruiter-portal-ui.yml"
  pull_request:
    branches:
      - main
    paths:
        - "infrastructure/modules/recruiter-portal-ui/**"
        - "apps/recruiter-portal-ui/**"
        - ".github/workflows/deploy-infra-recruiter-portal-ui.yml"

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.PA_TOKEN_GITHUB }}
  MONGODB_ATLAS_PRIVATE_KEY: ${{ secrets.MONGODB_ATLAS_PRIVATE_KEY }}
  MONGODB_ATLAS_PUBLIC_KEY: ${{ secrets.MONGODB_ATLAS_PUBLIC_KEY }}
  TF_VAR_cloudflare_acount_id: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
  TF_VAR_google_oauth_client_id: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
  TF_VAR_google_oauth_client_secret: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
  TF_VAR_mongodb_atlas_org_id: ${{vars.MONGODB_ATLAS_ORG_ID}}
  TF_VAR_support_email: ${{ vars.SUPPORT_EMAIL }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        working-directory: ./apps/recruiter-portal/
        run: pnpm install

      - name: Build
        working-directory: ./apps/recruiter-portal/
        run: pnpm package
        env:
            NEXT_PUBLIC_API_URL: http://localhost:8000
            NEXT_PUBLIC_URL: http://localhost:5001
            NEXT_PUBLIC_CAPTCHA_SITE_KEY: 
            NEXT_PUBLIC_ACCOUNTS_BASE_URL: http://localhost:5002
            NEXT_PUBLIC_SEEKER_PORTAL_BASE_URL: http://localhost:5000

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.3

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{vars.TERRAFORM_AWS_BACKEND_BUCKET_NAME}}" -backend-config="region=${{vars.AWS_REGION}}"

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        id: plan
        run: terraform plan -no-color -input=false -target=module.recruiter_portal_ui
        continue-on-error: true

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -no-color -target=module.recruiter_portal_ui
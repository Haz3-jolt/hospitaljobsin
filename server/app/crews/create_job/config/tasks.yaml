parse_outline_task:
  description: >
    Parse the provided job outline: `{outline}` to extract structured job attributes such as role, number of vacancies, and any other relevant details. Output a valid Python dictionary matching the JobOutlineParsed Pydantic model, with keys: 'role' (string), 'vacancies' (int or null), and 'additional_attributes' (dictionary or null). Example output: {"role": "ICU nurse", "vacancies": null, "additional_attributes": null}
  expected_output: >
    Dictionary with keys: role, vacancies, and any other attributes found in the outline.
  agent: healthcare_research_specialist

research_task:
  description: >
    Research the given healthcare role position thoroughly:
    1. Current market salary ranges and compensation trends
    2. Required certifications, licenses, and qualifications
    3. Typical responsibilities and daily duties
    4. Skills and experience requirements
    5. Industry demand and job market trends
    6. Competitive landscape and what top employers offer

    Focus on accurate, current information from reliable healthcare industry sources.
  expected_output: >
     Comprehensive research report covering salary ranges, requirements, responsibilities, and market insights for the healthcare role
  agent: healthcare_research_specialist
  context:
    - parse_outline_task

job_posting_creation_task:
  description: >
    Create a complete, professional job posting for the given healthcare role position:
    1. Compelling job title and engaging summary
    2. Clear role overview and mission alignment
    3. Detailed responsibilities and daily duties
    4. Required qualifications (education, certifications, experience)
    5. Preferred qualifications and skills
    6. Compensation and benefits information
    7. Company culture and growth opportunities
    8. Application instructions and next steps

    Use the research findings to ensure accuracy and competitiveness.
  expected_output: >
    Complete, professional job posting ready for publication with all necessary sections and compelling content
  agent: job_description_writer
  context:
    - research_task

compliance_review_task:
  description: >
    Review the job posting for compliance and best practices:
    1. Legal compliance and equal opportunity language
    2. Healthcare industry regulatory requirements
    3. Bias-free and inclusive language
    4. ADA compliance considerations
    5. Institutional policy alignment
    6. Professional tone and clarity

    Provide specific recommendations for any needed improvements.
  expected_output: >
    Final approved job posting with compliance verification and any recommended improvements
  agent: compliance_reviewer
  output_file: healthcare_job_posting.md
  context:
    - job_posting_creation_task

final_output_formatting_task:
  description: >
    Take the output from the compliance_review_task and format it into a dictionary that matches the JobResultData Pydantic model exactly. Ensure all keys and value types are present and correct, ready for validation and use by the backend.
  expected_output: >
    Dictionary matching the JobResultData Pydantic model (see server/app/ai/models.py for the exact structure).
  agent: compliance_reviewer
  context:
    - compliance_review_task
  # This task ensures the final output is ready for backend validation and use.
